{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0415\\u0410\\\\Downloads\\\\themeforest-gaWO5Vbo-landrick-react-landing-page-template\\\\Landrick_v3.1.0\\\\landrick\\\\src\\\\pages\\\\CryptoTwo\\\\ReviewSlider.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport crypto1 from '../../assets/images/crypto/1.jpg';\nimport crypto2 from '../../assets/images/crypto/2.jpg';\nimport crypto3 from '../../assets/images/crypto/3.jpg';\nimport crypto4 from '../../assets/images/crypto/4.jpg';\nimport crypto5 from '../../assets/images/crypto/5.jpg';\nimport crypto6 from '../../assets/images/crypto/6.jpg';\nimport crypto7 from '../../assets/images/crypto/7.jpg';\nimport crypto8 from '../../assets/images/crypto/8.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReviewsSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateWindowSize = () => {\n      if (window.outerWidth >= 1230) {\n        this.setState({\n          itemCount: 4,\n          cols: 3\n        });\n      } else if (window.outerWidth >= 970 && window.outerWidth < 1230) {\n        this.setState({\n          itemCount: 2,\n          cols: 6\n        });\n      } else if (window.outerWidth <= 970) {\n        this.setState({\n          itemCount: 1,\n          cols: 12\n        });\n      }\n    };\n\n    this.state = {\n      cols: 4,\n      step1: true,\n      step2: false,\n      review: [{\n        id: 1,\n        img: crypto1\n      }, {\n        id: 2,\n        img: crypto2\n      }, {\n        id: 3,\n        img: crypto3\n      }, {\n        id: 4,\n        img: crypto4\n      }, {\n        id: 5,\n        img: crypto5\n      }, {\n        id: 6,\n        img: crypto6\n      }, {\n        id: 7,\n        img: crypto7\n      }, {\n        id: 8,\n        img: crypto8\n      }]\n    };\n    this.updateWindowSize.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowSize);\n    this.updateWindowSize();\n  } // Make sure to remove the DOM listener when the component is unmounted.\n\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mt-5 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"customer-testi\",\n                className: \"tiny-four-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tiny-slide\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: this.state.step1 === true ? this.state.review.map((review, key) => key >= 0 && key <= 3 ? /*#__PURE__*/_jsxDEV(Col, {\n                      md: this.state.cols,\n                      className: \"mb-1\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"customer-testi\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: review.img,\n                          className: \"img-fluid rounded shadow\",\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 61\n                      }, this)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 57\n                    }, this) : null) : this.state.review.map((review, key) => key >= 4 && key <= 8 ? /*#__PURE__*/_jsxDEV(Col, {\n                      md: this.state.cols,\n                      className: \"mb-1\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"customer-testi\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: review.img,\n                          className: \"img-fluid rounded shadow\",\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 61\n                      }, this)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 57\n                    }, this) : null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tns-nav\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    this.setState({\n                      step1: true,\n                      step2: false\n                    });\n                  },\n                  className: this.state.step1 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    this.setState({\n                      step1: false,\n                      step2: true\n                    });\n                  },\n                  className: this.state.step2 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReviewsSlider;","map":{"version":3,"sources":["C:/Users/ЕА/Downloads/themeforest-gaWO5Vbo-landrick-react-landing-page-template/Landrick_v3.1.0/landrick/src/pages/CryptoTwo/ReviewSlider.js"],"names":["React","Component","Link","Row","Col","Container","crypto1","crypto2","crypto3","crypto4","crypto5","crypto6","crypto7","crypto8","ReviewsSlider","constructor","props","updateWindowSize","window","outerWidth","setState","itemCount","cols","state","step1","step2","review","id","img","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container } from \"reactstrap\";\n\nimport crypto1 from '../../assets/images/crypto/1.jpg';\nimport crypto2 from '../../assets/images/crypto/2.jpg';\nimport crypto3 from '../../assets/images/crypto/3.jpg';\nimport crypto4 from '../../assets/images/crypto/4.jpg';\nimport crypto5 from '../../assets/images/crypto/5.jpg';\nimport crypto6 from '../../assets/images/crypto/6.jpg';\nimport crypto7 from '../../assets/images/crypto/7.jpg';\nimport crypto8 from '../../assets/images/crypto/8.jpg';\n\nclass ReviewsSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cols: 4,\n            step1: true,\n            step2: false,\n            review: [\n                {\n                    id: 1,\n                    img: crypto1\n                },\n                {\n                    id: 2,\n                    img: crypto2\n                },\n                {\n                    id: 3,\n                    img: crypto3\n                },\n                {\n                    id: 4,\n                    img: crypto4\n                },\n                {\n                    id: 5,\n                    img: crypto5\n                },\n                {\n                    id: 6,\n                    img: crypto6\n                },\n                {\n                    id: 7,\n                    img: crypto7\n                },\n                {\n                    id: 8,\n                    img: crypto8\n                },\n            ]\n        };\n        this.updateWindowSize.bind(this);\n    }\n\n    updateWindowSize = () => {\n        if (window.outerWidth >= 1230) {\n            this.setState({ itemCount: 4, cols: 3 });\n        } else if (window.outerWidth >= 970 && window.outerWidth < 1230) {\n            this.setState({ itemCount: 2, cols: 6 });\n        } else if (window.outerWidth <= 970) {\n            this.setState({ itemCount: 1, cols: 12 });\n        }\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowSize);\n        this.updateWindowSize();\n    }\n\n    // Make sure to remove the DOM listener when the component is unmounted.\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowSize);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"mt-5 pt-4\">\n                    <Container>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div\n                                    id=\"customer-testi\"\n                                    className=\"tiny-four-item\"\n                                >\n                                    <div className=\"tiny-slide\">\n                                        <Row>\n                                            {this.state.step1 === true\n                                                ? this.state.review.map((review, key) =>\n                                                    key >= 0 && key <= 3 ? (\n                                                        <Col\n                                                            key={key}\n                                                            md={this.state.cols}\n                                                            className=\"mb-1\"\n                                                        >\n                                                            <Link to=\"#\" className=\"customer-testi\">\n                                                                <img src={review.img} className=\"img-fluid rounded shadow\" alt=\"\" />\n                                                            </Link>\n                                                        </Col>\n                                                    ) : null\n                                                )\n                                                : this.state.review.map((review, key) =>\n                                                    key >= 4 && key <= 8 ? (\n                                                        <Col\n                                                            key={key}\n                                                            md={this.state.cols}\n                                                            className=\"mb-1\"\n                                                        >\n                                                            <Link to=\"#\" className=\"customer-testi\">\n                                                                <img src={review.img} className=\"img-fluid rounded shadow\" alt=\"\" />\n                                                            </Link>\n                                                        </Col>\n                                                    ) : null\n                                                )}\n                                        </Row>\n                                    </div>\n                                </div>\n                                <div className=\"tns-nav\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            this.setState({ step1: true, step2: false });\n                                        }}\n                                        className={\n                                            this.state.step1 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                                        }\n                                    ></button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            this.setState({ step1: false, step2: true });\n                                        }}\n                                        className={\n                                            this.state.step2 ? \"tns-nav-active\" : \"tns-nav-inactive\"\n                                        }\n                                    ></button>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ReviewsSlider;\n"]},"metadata":{},"sourceType":"module"}